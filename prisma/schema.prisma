generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model User {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  username String @unique

  createdAt DateTime @default(now())

  updatedAt DateTime @updatedAt

  Feed Feed[]
}

enum Visibility {
  Public
  Unlisted
  Private
}

// TODO: auth tables

model Feed {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  name String

  description String?

  visibility Visibility @default(Private)

  creator User @relation(fields: [userId], references: [id])

  items FeedItem[]

  createdAt DateTime @default(now())

  updatedAt DateTime @updatedAt

  userId String @db.Uuid
}

enum FeedItemType {
  YouTubeChannel
}

model FeedItem {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  name String

  description String?

  meta FeedItemMeta @relation(fields: [feedItemMetaId], references: [id])

  feedItemMetaId String @db.Uuid

  Feed Feed? @relation(fields: [feedId], references: [id])

  feedId String? @db.Uuid

  createdAt DateTime @default(now())

  updatedAt DateTime @updatedAt
}

model FeedItemMeta {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  name String

  originId String

  type FeedItemType

  FeedItem FeedItem[]

  createdAt DateTime @default(now())

  updatedAt DateTime @updatedAt
}
